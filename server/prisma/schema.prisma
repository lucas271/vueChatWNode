generator client{
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(uuid())
  email String @unique
  name String
  password String
  profilePic String
  chats Chat[]
  friendRequestReceived friendRequest[] @relation(name: "receiver")
  friendRequestSent friendRequest[] @relation(name: "sender")
  friendOf Friendship[] @relation(name: "friend_friendships")
  friendWith Friendship[]@relation(name: "user_friendships")
  createdAt DateTime  @default(now())
  updatedAt DateTime @updatedAt

  @@index([id])
}

model Friendship{
  id String @id @default(cuid())
  user_id String
  user    User   @relation(name: "user_friendships", fields: [user_id], references: [id])
  friend_id String
  friend    User   @relation(name: "friend_friendships", fields: [friend_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@unique([friend_id, user_id])
  @@unique([user_id, friend_id])
} 

model friendRequest{
  id Int @id @default(autoincrement())
  receiverId String
  receiver User @relation(name: "receiver", fields: [receiverId], references: [id])
  senderId String
  sender User @relation(name: "sender", fields: [senderId], references: [id])
  createdAt DateTime  @default(now())

  @@index([id])  
  @@unique([senderId, receiverId])
  @@unique([receiverId, senderId])

}


model Chat{
  id String @id @default(uuid())
  participants User[]
  messages Message[]

  @@index([id])  
}

model Message{
  id String @id @default(uuid())
  chatId String
  message String
  chat Chat @relation(fields: [chatId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime @updatedAt

  @@index([id])
}
